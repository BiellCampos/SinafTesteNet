// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SinafTeste.Context;

namespace SinafTeste.Migrations
{
    [DbContext(typeof(SinafTestContext))]
    partial class SinafTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10");

            modelBuilder.Entity("SinafTeste.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("DtNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SinafTeste.Models.Cobertura", b =>
                {
                    b.Property<int>("IdCobertura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Percentual")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdCobertura");

                    b.ToTable("Cobertura");
                });

            modelBuilder.Entity("SinafTeste.Models.CoberturasCliente", b =>
                {
                    b.Property<int>("IdCoberturascliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CoberturaIdCobertura")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PropostaSeguroIdPropostaSeguro")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Valorpremio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Valorsegurado")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdCoberturascliente");

                    b.HasIndex("CoberturaIdCobertura");

                    b.HasIndex("PropostaSeguroIdPropostaSeguro");

                    b.ToTable("CoberturasCliente");
                });

            modelBuilder.Entity("SinafTeste.Models.DependenteAgregado", b =>
                {
                    b.Property<int>("IdDependenteAgregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeDepen")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdDependenteAgregado");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("DependenteAgregado");
                });

            modelBuilder.Entity("SinafTeste.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Complemento")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnderecoLog")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.HasKey("IdEndereco");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("SinafTeste.Models.PropostaSeguro", b =>
                {
                    b.Property<int>("IdPropostaSeguro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Valortotalpremio")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPropostaSeguro");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("PropostaSeguro");
                });

            modelBuilder.Entity("SinafTeste.Models.Telefone", b =>
                {
                    b.Property<long>("IdTelefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.HasKey("IdTelefone");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("SinafTeste.Models.CoberturasCliente", b =>
                {
                    b.HasOne("SinafTeste.Models.Cobertura", "Cobertura")
                        .WithMany()
                        .HasForeignKey("CoberturaIdCobertura");

                    b.HasOne("SinafTeste.Models.PropostaSeguro", null)
                        .WithMany("CoberturasCliente")
                        .HasForeignKey("PropostaSeguroIdPropostaSeguro");
                });

            modelBuilder.Entity("SinafTeste.Models.DependenteAgregado", b =>
                {
                    b.HasOne("SinafTeste.Models.Cliente", null)
                        .WithMany("DependenteAgregado")
                        .HasForeignKey("ClienteIdCliente");
                });

            modelBuilder.Entity("SinafTeste.Models.Endereco", b =>
                {
                    b.HasOne("SinafTeste.Models.Cliente", null)
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteIdCliente");
                });

            modelBuilder.Entity("SinafTeste.Models.PropostaSeguro", b =>
                {
                    b.HasOne("SinafTeste.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteIdCliente");
                });

            modelBuilder.Entity("SinafTeste.Models.Telefone", b =>
                {
                    b.HasOne("SinafTeste.Models.Cliente", null)
                        .WithMany("Telefones")
                        .HasForeignKey("ClienteIdCliente");
                });
#pragma warning restore 612, 618
        }
    }
}
